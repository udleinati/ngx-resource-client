{"version":3,"file":"document.js","sourceRoot":"","sources":["../../src/interfaces/document.ts"],"names":[],"mappings":"","sourcesContent":["import { IDataResource } from '../interfaces/data-resource';\nimport { ILinks } from '../interfaces/links';\nimport { Resource } from '../resource';\nimport { IPage } from './page';\n\n// http://org/format/#document-top-level\nexport interface IDocument<R extends Resource = Resource> {\n    // A document MUST contain at least one of the following top-level members:\n    data?: R | Array<R> | Array<IDataResource> | IDataResource; // @todo remover IDataResource[]\n    errors?: any;\n    meta?: { [key: string]: any };\n\n    // A document MAY contain any of these top-level members:\n    jsonapi?: string;\n    links?: ILinks;\n\n    // No Json Api specification attributes\n    builded?: boolean;\n    content?: 'ids' | 'collection' | 'id' | 'resource' | 'error' | '';\n}\n\nexport interface IDocumentData<R extends Resource = Resource> extends IDocument {\n    data: R | Array<R> | IDataResource | Array<IDataResource>; // @todo remover IDataResource[]    included?: any;\n    content?: 'collection' | 'resource' | 'id' | 'ids' | '';\n    included?: Array<any>;\n\n    page?: IPage;\n    trackBy?(r: Resource): string;\n}\n\nexport interface IDocumentErrors extends IDocument {\n    errors: any;\n    content: 'error';\n}\n\nexport interface IDocumentMeta extends IDocument {\n    meta: { [key: string]: any };\n    content: '';\n}\n"]}