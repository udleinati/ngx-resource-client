{"version":3,"file":"cacheable-helper..js","sourceRoot":"","sources":["../../src/services/cacheable-helper..ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAC;AAG9D,MAAM;;;;;;IACK,MAAM,CAAC,eAAe,CAAC,aAA6B,EAAE,KAAc;QACvE,KAAK,IAAI,kBAAkB,IAAI,aAAa,EAAE;;YAC1C,IAAI,YAAY,GAAG,aAAa,CAAC,kBAAkB,CAAC,CAAC;YACrD,IAAI,YAAY,YAAY,kBAAkB,EAAE;;;gBAG5C,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC;aACzD;SACJ;;CAER","sourcesContent":["import { DocumentCollection } from './../document-collection';\nimport { IRelationships } from './../interfaces/relationship';\n\nexport class CacheableHelper {\n    public static propagateLoaded(relationships: IRelationships, value: boolean): void {\n        for (let relationship_alias in relationships) {\n            let relationship = relationships[relationship_alias];\n            if (relationship instanceof DocumentCollection) {\n                // we need to add builded, becuase we dont save objects with content='ids'.\n                // these relationships are broken (without any data on data)\n                relationship.setLoaded(value && relationship.builded);\n            }\n        }\n    }\n}\n"]}