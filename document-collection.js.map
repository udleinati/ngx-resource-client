{"version":3,"file":"document-collection.js","sourceRoot":"","sources":["../src/document-collection.ts"],"names":[],"mappings":"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","sourcesContent":["import { CacheableHelper } from './services/cacheable-helper.';\nimport { IParamsCollection } from './interfaces/params-collection';\nimport { Resource } from './resource';\nimport { Page } from './services/page';\nimport { Document, SourceType } from './document';\nimport { ICacheable } from './interfaces/cacheable';\nimport { Converter } from './services/converter';\nimport { IDataCollection, ICacheableDataCollection } from './interfaces/data-collection';\nimport { IDataResource, IBasicDataResource } from './interfaces/data-resource';\nimport { isDevMode } from '@angular/core';\n\n// used for collections on relationships, for parent document use DocumentCollection\nexport class RelatedDocumentCollection<R extends Resource = Resource> extends Document implements ICacheable {\n    public data: Array<Resource | IBasicDataResource> = [];\n    // public data: Array<Resource | IBasicDataResource> = [];\n    public page = new Page();\n    public ttl = 0;\n    public content: 'ids' | 'collection' = 'ids';\n    public data_collection: IDataCollection;\n\n    public trackBy(iterated_resource: Resource): string {\n        return iterated_resource.id;\n    }\n\n    public find(id: string): R | null {\n        if (this.content === 'ids') {\n            return null;\n        }\n\n        // this is the best way: https://jsperf.com/fast-array-foreach\n        for (let i = 0; i < this.data.length; i++) {\n            if (this.data[i].id === id) {\n                return <R>this.data[i];\n            }\n        }\n\n        return null;\n    }\n\n    public fill(data_collection: IDataCollection | ICacheableDataCollection): void {\n        \n        this.data_collection = data_collection;\n        Converter.buildIncluded(data_collection);\n\n        // sometimes get Cannot set property 'number' of undefined (page)\n        if (this.page && data_collection.meta) {\n            this.page.number = data_collection.meta.page || 1;\n            this.page.resources_per_page = data_collection.meta.resources_per_page || null; // @deprecated (v2.0.2)\n            this.page.size = data_collection.meta.resources_per_page || null;\n            this.page.total_resources = data_collection.meta.total_resources || null;\n        }\n\n        // convert and add new dataresoures to final collection\n        let new_ids = {};\n        this.data.length = 0;\n        this.builded = data_collection.data && data_collection.data.length === 0;\n        for (let dataresource of data_collection.data) {\n            try {\n                let res = this.getResourceOrFail(dataresource);\n                res.fill({ data: dataresource });\n                new_ids[dataresource.id] = dataresource.id;\n                (<Array<R>>this.data).push(<R>res);\n                if (Object.keys(res.attributes).length > 0) {\n                    this.builded = true;\n                }\n            } catch (error) {\n                this.content = 'ids';\n                this.builded = false;\n                this.data.push({ id: dataresource.id, type: dataresource.type });\n            }\n        }\n\n        // remove old members of collection (bug, for example, when request something like orders/10/details and has new ids)\n        // @todo test with relation.data.filter(resource =>  resource.id != id );\n        for (let i; i < this.data.length; i++) {\n            if (!(this.data[i].id in new_ids)) {\n                delete this.data[i];\n            }\n        }\n\n        this.meta = data_collection.meta || {};\n\n        if ('cache_last_update' in data_collection) {\n            this.cache_last_update = data_collection.cache_last_update;\n        }\n    }\n\n    private getResourceOrFail(dataresource: IDataResource): Resource {\n        let res = this.find(dataresource.id);\n\n        if (res !== null) {\n            return res;\n        }\n\n        let service = Converter.getService(dataresource.type);\n\n        // remove when getService return null or catch errors\n        // this prvent a fill on undefinied service :/\n        if (!service) {\n            if (isDevMode()) {\n                console.warn(\n                    'The relationship ' +\n                        'relation_alias?' +\n                        ' (type ' +\n                        dataresource.type +\n                        ') cant be generated because service for this type has not been injected.'\n                );\n            }\n\n            throw new Error('Cant create service for ' + dataresource.type);\n        }\n        // END remove when getService return null or catch errors\n\n        return service.getOrCreateResource(dataresource.id);\n    }\n\n    public replaceOrAdd(resource: R): void {\n        let res = this.find(resource.id);\n        if (res === null) {\n            (<Array<R>>this.data).push(resource);\n        } else {\n            res = resource;\n        }\n    }\n\n    public hasMorePages(): boolean | null {\n        if (!this.page.size || this.page.size < 1) {\n            return null;\n        }\n\n        let total_resources = this.page.size * (this.page.number - 1) + this.data.length;\n\n        return total_resources < this.page.total_resources;\n    }\n\n    public setLoaded(value: boolean): void {\n        // tslint:disable-next-line:deprecation\n        this.is_loading = !value;\n        this.loaded = value;\n    }\n\n    public setLoadedAndPropagate(value: boolean): void {\n        this.setLoaded(value);\n\n        if (this.content === 'ids') {\n            return;\n        }\n        (<Array<R>>this.data).forEach(resource => {\n            CacheableHelper.propagateLoaded(resource.relationships, value);\n        });\n    }\n\n    public setBuilded(value: boolean): void {\n        this.builded = value;\n    }\n\n    public setBuildedAndPropagate(value: boolean): void {\n        this.setBuilded(value);\n        if (this.content === 'ids') {\n            return;\n        }\n        (<Array<R>>this.data).forEach(resource => {\n            resource.setLoaded(value);\n        });\n    }\n\n    public setSource(value: SourceType): void {\n        this.source = value;\n    }\n\n    public setSourceAndPropagate(value: SourceType): void {\n        this.setSource(value);\n        this.data.forEach(resource => {\n            if (resource instanceof Resource) {\n                resource.setSource(value);\n            }\n        });\n    }\n\n    public setCacheLastUpdate(value = Date.now()) {\n        this.cache_last_update = value;\n    }\n\n    public setCacheLastUpdateAndPropagate(value = Date.now()) {\n        this.setCacheLastUpdate(value);\n        this.data.forEach(resource => {\n            if (resource instanceof Resource) {\n                resource.setCacheLastUpdate(value);\n            }\n        });\n    }\n\n    public toObject(params?: IParamsCollection): IDataCollection {\n        if (!this.builded) {\n            return { data: this.data };\n        }\n\n        let data = (<Array<R>>this.data).map(resource => {\n            return resource.toObject(params).data;\n        });\n\n        return {\n            data: data\n        };\n    }\n}\nexport class DocumentCollection<R extends Resource = Resource> extends RelatedDocumentCollection<R> {\n    public data: Array<R> = [];\n    public content: 'collection' = 'collection';\n}\n"]}