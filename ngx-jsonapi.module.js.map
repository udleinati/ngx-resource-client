{"version":3,"file":"ngx-jsonapi.module.js","sourceRoot":"","sources":["../src/ngx-jsonapi.module.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,QAAQ,EAAuB,QAAQ,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAE/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,QAAQ,CAAC;AAC7C,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAAE,YAAY,IAAI,YAAY,EAAE,MAAM,yBAAyB,CAAC;AAGvE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAejD,MAAM;;;;;gBAIE,YAA8B,EAC9B,WAAwB;QAExB,IAAI,YAAY,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SAC1F;;;;;;IAGE,MAAM,CAAC,OAAO,CAAC,MAAqB;QACvC,OAAO;YACH,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;SAC5D,CAAC;;;;YA7BT,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE;oBAEL,gBAAgB;iBACnB;gBACD,SAAS,EAAE;oBACP,WAAW;oBACX,YAAY;oBACZ,aAAa;oBACb,WAAW;iBACd;aACJ;;;;YAKqB,gBAAgB,uBAF7B,QAAQ,YACR,QAAQ;YAvBA,WAAW","sourcesContent":["import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { Core as JsonapiCore } from './core';\nimport { Http as JsonapiHttp } from './sources/http.service';\nimport { StoreService as JsonapiStore } from './sources/store.service';\n\n// testing\nimport { JsonapiConfig } from './jsonapi-config';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [\n        // BrowserModule,  // needed by HttpClientModule?\n        HttpClientModule\n    ],\n    providers: [\n        JsonapiCore,\n        JsonapiStore,\n        JsonapiConfig, // Need this here for testing\n        JsonapiHttp\n    ]\n})\nexport class NgxJsonapiModule {\n    public constructor(\n        @Optional()\n        @SkipSelf()\n        parentModule: NgxJsonapiModule,\n        jsonapiCore: JsonapiCore\n    ) {\n        if (parentModule) {\n            throw new Error('NgxJsonapiModule is already loaded. Import it in the AppModule only');\n        }\n    }\n\n    public static forRoot(config: JsonapiConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxJsonapiModule,\n            providers: [{ provide: JsonapiConfig, useValue: config }]\n        };\n    }\n}\n"]}